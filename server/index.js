const express = require("express");
const cors = require("cors");
const path = require("path");
require("dotenv").config();

const app = express();
const PORT = process.env.PORT || 3000;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Yandex OAuth
const YANDEX_CLIENT_ID =
    process.env.YANDEX_CLIENT_ID || "eb39cd2450494ff08aff16d3346725a6";
const YANDEX_CLIENT_SECRET = process.env.YANDEX_CLIENT_SECRET;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –°—Ç–∞—Ç–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã
app.use(express.static(path.join(__dirname, "public")));

// –•—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π OAuth
const sessions = new Map();

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ state –¥–ª—è CSRF –∑–∞—â–∏—Ç—ã
function generateState() {
    return (
        Math.random().toString(36).substring(2, 15) +
        Math.random().toString(36).substring(2, 15)
    );
}

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get("/", (req, res) => {
    res.send(`
        <!DOCTYPE html>
        <html>
        <head>
            <title>Vencord Yandex OAuth Server</title>
            <meta charset="utf-8">
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; background: #2c2f33; color: white; }
                .container { max-width: 600px; margin: 0 auto; }
                .status { padding: 20px; background: #40444b; border-radius: 8px; margin: 20px 0; }
                .auth-button {
                    background: #ff3333;
                    color: white;
                    padding: 12px 24px;
                    border: none;
                    border-radius: 6px;
                    cursor: pointer;
                    font-size: 16px;
                    text-decoration: none;
                    display: inline-block;
                }
                .auth-button:hover { background: #cc0000; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üéµ Vencord Yandex Music OAuth Server</h1>
                <div class="status">
                    <p>–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ OAuth –∑–∞–ø—Ä–æ—Å–æ–≤</p>
                    <p>–ü–æ—Ä—Ç: ${PORT}</p>
                    <p>–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${new Date().toLocaleString("ru-RU")}</p>
                </div>
                <div class="status">
                    <h3>–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</h3>
                    <p><strong>Client ID:</strong> <code>${YANDEX_CLIENT_ID}</code></p>
                    <p><strong>Client Secret:</strong> ${
                        YANDEX_CLIENT_SECRET
                            ? "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω"
                            : "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–ø—É–±–ª–∏—á–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)"
                    }</p>
                    <p><strong>Redirect URI:</strong> <code>http://localhost:${PORT}/oauth/callback</code></p>
                </div>
                <div class="status">
                    <h3>‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–µ–∫—É—â–∏–º Client ID</h3>
                    <p style="color: #ff6b6b;">–¢–µ–∫—É—â–∏–π Client ID —Å–æ–∑–¥–∞–Ω –∫–∞–∫ <strong>–∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</strong> –∏ —Ç—Ä–µ–±—É–µ—Ç Client Secret.</p>
                    <p><strong>–†–µ—à–µ–Ω–∏–µ:</strong> –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ <strong>–ø—É–±–ª–∏—á–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</strong>:</p>
                </div>
                <div class="status">
                    <h3>üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h3>
                    <p>1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <a href="https://oauth.yandex.ru/client/new" target="_blank" style="color: #ff3333;">Yandex OAuth Console</a></p>
                    <p>2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</p>
                    <p>‚Ä¢ <strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> Vencord Yandex Music Public</p>
                    <p>‚Ä¢ <strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> <span style="background: #4CAF50; color: white; padding: 2px 6px; border-radius: 3px;">üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</span></p>
                    <p>‚Ä¢ <strong>Package name:</strong> <code>com.vencord.yandexmusic</code></p>
                    <p>‚Ä¢ <strong>Redirect URI:</strong> <code>http://localhost:${PORT}/oauth/callback</code></p>
                    <p>‚Ä¢ <strong>–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:</strong> <code>login:info</code>, <code>login:email</code></p>
                    <p>3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–π Client ID –∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª <code>.env</code></p>
                </div>
                <div class="status">
                    <h3>üîÑ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±</h3>
                    <p>–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å Client Secret –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</p>
                    <p>1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code>.env</code> –≤ –ø–∞–ø–∫–µ server</p>
                    <p>2. –î–æ–±–∞–≤—å—Ç–µ: <code>YANDEX_CLIENT_SECRET=–≤–∞—à_client_secret</code></p>
                    <p>3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä</p>
                </div>
                <div class="status">
                    <h3>–°–º–µ–Ω–∞ Client ID</h3>
                    <p>–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ Client ID:</p>
                    <p>1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code>.env</code></p>
                    <p>2. –î–æ–±–∞–≤—å—Ç–µ: <code>YANDEX_CLIENT_ID=–≤–∞—à_client_id</code></p>
                    <p>3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä</p>
                </div>
            </div>
        </body>
        </html>
    `);
});

// –ò–Ω–∏—Ü–∏–∞—Ü–∏—è OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
app.get("/oauth/authorize", (req, res) => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Client ID
    const client_id = YANDEX_CLIENT_ID;
    const redirect_uri = `http://localhost:${PORT}/oauth/callback`;

    console.log(`üÜî –ò—Å–ø–æ–ª—å–∑—É—è Client ID: ${client_id}`);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º state –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç CSRF
    const state = generateState();
    sessions.set(state, {
        client_id,
        redirect_uri,
        timestamp: Date.now(),
    });

    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Yandex
    const yandexAuthUrl = new URL("https://oauth.yandex.ru/authorize");
    yandexAuthUrl.searchParams.set("response_type", "code");
    yandexAuthUrl.searchParams.set("client_id", client_id);
    yandexAuthUrl.searchParams.set("redirect_uri", redirect_uri);
    yandexAuthUrl.searchParams.set("state", state);
    yandexAuthUrl.searchParams.set("force_confirm", "yes");

    console.log(
        "üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ Yandex OAuth:",
        yandexAuthUrl.toString()
    );

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ Yandex OAuth
    res.redirect(yandexAuthUrl.toString());
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –æ—Ç Yandex OAuth
app.get("/oauth/callback", async (req, res) => {
    const { code, state, error } = req.query;

    console.log("üì• –ü–æ–ª—É—á–µ–Ω OAuth –∫–æ–ª–±—ç–∫:", { code: !!code, state, error });

    if (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error);
        return res.send(`
            <!DOCTYPE html>
            <html>
            <head>
                <title>–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</title>
                <meta charset="utf-8">
                <style>
                    body { font-family: Arial, sans-serif; margin: 40px; background: #2c2f33; color: white; text-align: center; }
                    .error { background: #ff4444; padding: 20px; border-radius: 8px; margin: 20px 0; }
                </style>
            </head>
            <body>
                <h1>‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h1>
                <div class="error">
                    <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error}</p>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ</p>
                </div>
                <script>
                    setTimeout(() => window.close(), 5000);
                </script>
            </body>
            </html>
        `);
    }

    if (!code || !state) {
        return res.status(400).send("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ state");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º state
    const session = sessions.get(state);
    if (!session) {
        console.error("‚ùå –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π state:", state);
        return res.status(400).send("–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π state");
    }

    try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω
        const tokenParams = {
            grant_type: "authorization_code",
            code: code,
            client_id: session.client_id,
        };

        // –î–æ–±–∞–≤–ª—è–µ–º client_secret —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω (–¥–ª—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π)
        if (YANDEX_CLIENT_SECRET && YANDEX_CLIENT_SECRET.trim()) {
            tokenParams.client_secret = YANDEX_CLIENT_SECRET;
            console.log(
                "üîê –ò—Å–ø–æ–ª—å–∑—É—é Client Secret –¥–ª—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
            );
        } else {
            console.log(
                "üîì –†–∞–±–æ—Ç–∞—é –∫–∞–∫ –ø—É–±–ª–∏—á–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–±–µ–∑ Client Secret)"
            );
        }

        // –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω
        const tokenResponse = await fetch("https://oauth.yandex.ru/token", {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
            },
            body: new URLSearchParams(tokenParams),
        });

        const tokenData = await tokenResponse.json();

        if (tokenData.error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:", tokenData);
            throw new Error(tokenData.error_description || tokenData.error);
        }

        console.log("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ");

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        const userResponse = await fetch("https://login.yandex.ru/info", {
            headers: {
                Authorization: `OAuth ${tokenData.access_token}`,
            },
        });

        const userData = await userResponse.json();
        console.log("üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:", userData.login);

        // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
        sessions.delete(state);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        res.send(`
            <!DOCTYPE html>
            <html>
            <head>
                <title>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞</title>
                <meta charset="utf-8">
                <style>
                    body { font-family: Arial, sans-serif; margin: 40px; background: #2c2f33; color: white; text-align: center; }
                    .success { background: #4CAF50; padding: 20px; border-radius: 8px; margin: 20px 0; }
                    .token { background: #40444b; padding: 15px; border-radius: 6px; margin: 20px 0; word-break: break-all; }
                </style>
            </head>
            <body>
                <h1>‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</h1>
                <div class="success">
                    <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${
                        userData.real_name || userData.login
                    }!</p>
                    <p>–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—É—á–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.</p>
                </div>
                <div class="token">
                    <h3>üîë –¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞:</h3>
                    <textarea readonly style="
                        width: 100%;
                        height: 100px;
                        padding: 10px;
                        border: 1px solid #555;
                        border-radius: 4px;
                        background: #2f3136;
                        color: white;
                        font-family: monospace;
                        font-size: 12px;
                        resize: none;
                        white-space: nowrap;
                        overflow: auto;
                    " onclick="this.select(); document.execCommand('copy'); alert('–¢–æ–∫–µ–Ω —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');">${
                        tokenData.access_token
                    }</textarea>
                    <small>üëÜ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ</small>
                    <br><br>
                    <div style="background: #4CAF50; padding: 15px; border-radius: 6px; margin: 15px 0;">
                        <h4 style="margin: 0 0 10px 0;">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Discord:</h4>
                        <p style="margin: 0; font-size: 14px;">
                            1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –≤—ã—à–µ (–Ω–∞–∂–∞–≤ –Ω–∞ –Ω–µ–≥–æ)<br>
                            2. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ Discord<br>
                            3. –ù–∞–∂–º–∏—Ç–µ "–í–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É—é" –≤ –≤–∏–¥–∂–µ—Ç–µ –ø–ª–∞–≥–∏–Ω–∞<br>
                            4. –í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ –Ω–∞–∂–º–∏—Ç–µ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
                        </p>
                    </div>
                </div>
                <script>
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –æ–±—Ä–∞—Ç–Ω–æ –≤ –ø–ª–∞–≥–∏–Ω
                    if (window.opener) {
                        window.opener.postMessage({
                            type: 'YANDEX_OAUTH_SUCCESS',
                            token: '${tokenData.access_token}',
                            user: ${JSON.stringify(userData)}
                        }, '*');
                        window.close();
                    } else {
                        // –ï—Å–ª–∏ –æ–∫–Ω–æ –Ω–µ –±—ã–ª–æ –æ—Ç–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ –ø–ª–∞–≥–∏–Ω, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω
                        setTimeout(() => window.close(), 30000);
                    }
                </script>
            </body>
            </html>
        `);
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ OAuth:", error);
        res.status(500).send(`
            <!DOCTYPE html>
            <html>
            <head>
                <title>–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</title>
                <meta charset="utf-8">
                <style>
                    body { font-family: Arial, sans-serif; margin: 40px; background: #2c2f33; color: white; text-align: center; }
                    .error { background: #ff4444; padding: 20px; border-radius: 8px; margin: 20px 0; }
                </style>
            </head>
            <body>
                <h1>‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</h1>
                <div class="error">
                    <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:</p>
                    <p>${error.message}</p>
                </div>
                <script>
                    setTimeout(() => window.close(), 5000);
                </script>
            </body>
            </html>
        `);
    }
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
app.get("/api/user", async (req, res) => {
    const token = req.headers.authorization?.replace("Bearer ", "");

    if (!token) {
        return res.status(401).json({ error: "–¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω" });
    }

    try {
        const response = await fetch("https://login.yandex.ru/info", {
            headers: {
                Authorization: `OAuth ${token}`,
            },
        });

        const userData = await response.json();

        if (userData.error) {
            return res.status(401).json({ error: "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω" });
        }

        res.json(userData);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:", error);
        res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
});

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
setInterval(() => {
    const now = Date.now();
    const fiveMinutes = 5 * 60 * 1000;

    for (const [state, session] of sessions) {
        if (now - session.timestamp > fiveMinutes) {
            sessions.delete(state);
            console.log("üßπ –£–¥–∞–ª–µ–Ω–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∞—è —Å–µ—Å—Å–∏—è:", state);
        }
    }
}, 5 * 60 * 1000);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
    console.error("üí• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:", err);
    res.status(500).json({ error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`üöÄ Yandex OAuth —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    console.log(
        `üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Redirect URI: http://localhost:${PORT}/oauth/callback`
    );
    console.log(
        `üéµ –ì–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ OAuth –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è Vencord Yandex Music –ø–ª–∞–≥–∏–Ω–∞`
    );
});
